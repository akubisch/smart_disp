theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_bw(base_size=15,axis.line.x=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15,axis.line.x=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15,axis.line.x=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15,axis.line=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_linedraw(base_size=15)+#,axis.line=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_light(base_size=15)+#,axis.line=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_linedraw(base_size=15)+#,axis.line=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15)+#,axis.line=element_line(size=1)) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15,axis.line=element_line(color="black")) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15,axis.line.x=element_line(color="black")) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20)) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20),axis.line=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20),axis.line.x=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=15) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
library(ggplot2)
library(tikzDevice)
disp_prob = function(C,Cth,gamma) { # defines the dispersal function
d = rep(0,length(C))
d[C>Cth] = 1 - (Cth*(1-gamma))/(C[C>Cth]-Cth*gamma)
return(d)
}
densx = seq(0,3,len=100) # a vector of population densities
Cth = 1.1 # defining a threshold density value
gammas = c(0,0.5,0.9,0.99)
d = numeric()
dens = numeric()
gam = numeric()
for (g in gammas) {
d = c(d,disp_prob(densx,Cth,g))
dens = c(dens,densx)
gam = c(gam,rep(g,length(densx)))
}
res = data.frame(dens=dens,disp=d,gamma=factor(gam))
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
x11()
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=20) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=20),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=6)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.5),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.85,1.55),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.25,1.9,1.55),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[italic(TAE)]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.3,1.9,1.55),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
library(ggplot2)
library(tikzDevice)
disp_prob = function(C,Cth,gamma) { # defines the dispersal function
d = rep(0,length(C))
d[C>Cth] = 1 - (Cth*(1-gamma))/(C[C>Cth]-Cth*gamma)
return(d)
}
densx = seq(0,3,len=100) # a vector of population densities
Cth = 1.1 # defining a threshold density value
gammas = c(0,0.5,0.9,0.99)
d = numeric()
dens = numeric()
gam = numeric()
for (g in gammas) {
d = c(d,disp_prob(densx,Cth,g))
dens = c(dens,densx)
gam = c(gam,rep(g,length(densx)))
}
res = data.frame(dens=dens,disp=d,gamma=factor(gam))
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
x11()
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[TAE]))) +
xlab(expression(paste("Estimated population density ",italic(N)[italic(i)]^italic(E)/bar(italic(K))))) +
annotate("text",x=c(2.5,2.3,1.9,1.55),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
library(ggplot2)
library(tikzDevice)
disp_prob = function(C,Cth,gamma) { # defines the dispersal function
d = rep(0,length(C))
d[C>Cth] = 1 - (Cth*(1-gamma))/(C[C>Cth]-Cth*gamma)
return(d)
}
densx = seq(0,3,len=100) # a vector of population densities
Cth = 1.1 # defining a threshold density value
gammas = c(0,0.5,0.9,0.99)
d = numeric()
dens = numeric()
gam = numeric()
for (g in gammas) {
d = c(d,disp_prob(densx,Cth,g))
dens = c(dens,densx)
gam = c(gam,rep(g,length(densx)))
}
res = data.frame(dens=dens,disp=d,gamma=factor(gam))
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
x11()
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[TAE]))) +
xlab(expression(paste("Estimated population density ",italic(N)[i]^E/bar(italic(K))))) +
annotate("text",x=c(2.5,2.3,1.9,1.55),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
library(ggplot2)
library(tikzDevice)
disp_prob = function(C,Cth,gamma) { # defines the dispersal function
d = rep(0,length(C))
d[C>Cth] = 1 - (Cth*(1-gamma))/(C[C>Cth]-Cth*gamma)
return(d)
}
densx = seq(0,3,len=100) # a vector of population densities
Cth = 1.1 # defining a threshold density value
gammas = c(0,0.5,0.9,0.99)
d = numeric()
dens = numeric()
gam = numeric()
for (g in gammas) {
d = c(d,disp_prob(densx,Cth,g))
dens = c(dens,densx)
gam = c(gam,rep(g,length(densx)))
}
res = data.frame(dens=dens,disp=d,gamma=factor(gam))
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
x11()
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_classic(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[TAE]))) +
xlab(expression(paste("Estimated population density ",italic(N)[i]^E/bar(italic(K))))) +
annotate("text",x=c(2.5,2.3,1.9,1.55),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
library(ggplot2)
library(tikzDevice)
disp_prob = function(C,Cth,gamma) { # defines the dispersal function
d = rep(0,length(C))
d[C>Cth] = 1 - (Cth*(1-gamma))/(C[C>Cth]-Cth*gamma)
return(d)
}
densx = seq(0,3,len=100) # a vector of population densities
Cth = 1.1 # defining a threshold density value
gammas = c(0,0.5,0.9,0.99)
d = numeric()
dens = numeric()
gam = numeric()
for (g in gammas) {
d = c(d,disp_prob(densx,Cth,g))
dens = c(dens,densx)
gam = c(gam,rep(g,length(densx)))
}
res = data.frame(dens=dens,disp=d,gamma=factor(gam))
gamlab = c(paste(expression(gamma==0)),
paste(expression(gamma==0.5)),
paste(expression(gamma==0.9)),
paste(expression(gamma==0.99)))
x11()
ggplot(res,aes(x=dens,y=disp,colour=gamma, group=gamma, linetype=gamma)) + geom_line(size=1.25) +
theme_bw(base_size=25) +
scale_color_grey() +
theme(legend.position="none", text=element_text(size=25),axis.line.x=element_line(color="black"),axis.line.y=element_line(color="black")) +
ylab(expression(paste("Emigration probability ", italic(d)[TAE]))) +
xlab(expression(paste("Estimated population density ",italic(N)[i]^E/bar(italic(K))))) +
annotate("text",x=c(2.5,2.3,1.9,1.55),y=c(0.475,0.6,0.8,0.9),parse=T,label=gamlab, size=7)
dev.copy2eps(file="figure_1.eps",title="Poethke et al. | Figure 1")
x11(width=10,height=7)
axcex <- 2.25
par(mfrow=c(2,3),oma=c(5,5.5,5,5),mar=c(4,.5,.5,2))
### standard sigmoid
# I=0.2
data <- read.table("sig25_i02_S/data/output.txt",header=T)
x <- data$frac_s1
y <- data$frac_draw
# in the following we calculate the total fraction of won competitions (*1/3, because every strategy participated in 3 competitions)
wins_TL  <- 1/3 * ( sum(x[1:3]) )
wins_TA  <- 1/3 * ( 1-x[1]-y[1] + sum(x[4:5]) )
wins_TAE <- 1/3 * ( 1-x[2]-y[2] + 1-x[4]-y[4] + x[6] )
wins_S   <- 1/3 * ( 1-x[3]-y[3] + 1-x[5]-y[5] + 1-x[6]-y[6] )
draws_TL  <- 1/3 * ( y[1] + y[2] + y[3] )
draws_TA  <- 1/3 * ( y[1] + y[4] + y[5] )
draws_TAE <- 1/3 * ( y[2] + y[4] + y[6] )
draws_S   <- 1/3 * ( y[3] + y[5] + y[6] )
xses_win <- 1:4
plot(1,1,type="n",bty="l",ylim=c(0.038,1),
xlim=c(0.5,4.5),xlab="",ylab="",xaxt="n",xaxs="i",
cex.axis=axcex,yaxt="n")
axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c("0","","0.5","","1"),cex.axis=axcex)
#segments(xses_win,rep(-1,4),xses_win,c(wins_TL,wins_TA,wins_TAE,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,rep(-1,4),xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),xses_win,c(wins_TA+draws_TA,wins_TAE+draws_TAE,wins_TL+draws_TL,wins_S+draws_S),lend=1,lwd=20,col="grey75")
text(1,-0.15,expression(paste(italic(T)[A])),srt=90,xpd=T,cex=2.5)
text(2,-0.15,expression(paste(italic(T)[AE])),srt=90,xpd=T,cex=2.5)
text(3,-0.15,expression(paste(italic(T)[L])),srt=90,xpd=T,cex=2.5)
text(4,-0.15,expression(paste(italic(S))),srt=90,xpd=T,cex=2.5)
# I=0.5
data <- read.table("sig25_i05_S/data/output.txt",header=T)
x <- data$frac_s1
y <- data$frac_draw
# in the following we calculate the total fraction of won competitions (*1/3, because every strategy participated in 3 competitions)
wins_TL  <- 1/3 * ( sum(x[1:3]) )
wins_TA  <- 1/3 * ( 1-x[1]-y[1] + sum(x[4:5]) )
wins_TAE <- 1/3 * ( 1-x[2]-y[2] + 1-x[4]-y[4] + x[6] )
wins_S   <- 1/3 * ( 1-x[3]-y[3] + 1-x[5]-y[5] + 1-x[6]-y[6] )
draws_TL  <- 1/3 * ( y[1] + y[2] + y[3] )
draws_TA  <- 1/3 * ( y[1] + y[4] + y[5] )
draws_TAE <- 1/3 * ( y[2] + y[4] + y[6] )
draws_S   <- 1/3 * ( y[3] + y[5] + y[6] )
xses_win <- 1:4
plot(1,1,type="n",bty="l",ylim=c(0.038,1),
xlim=c(0.5,4.5),xlab="",ylab="",xaxt="n",xaxs="i",
cex.axis=axcex,yaxt="n")
#axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c("0","","0.5","","1"),cex.axis=axcex)
#segments(xses_win,rep(-1,4),xses_win,c(wins_TL,wins_TA,wins_TAE,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,rep(-1,4),xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),xses_win,c(wins_TA+draws_TA,wins_TAE+draws_TAE,wins_TL+draws_TL,wins_S+draws_S),lend=1,lwd=20,col="grey75")
text(1,-0.15,expression(paste(italic(T)[A])),srt=90,xpd=T,cex=2.5)
text(2,-0.15,expression(paste(italic(T)[AE])),srt=90,xpd=T,cex=2.5)
text(3,-0.15,expression(paste(italic(T)[L])),srt=90,xpd=T,cex=2.5)
text(4,-0.15,expression(paste(italic(S))),srt=90,xpd=T,cex=2.5)
# I=0.8
data <- read.table("sig25_i08_S/data/output.txt",header=T)
x <- data$frac_s1
y <- data$frac_draw
# in the following we calculate the total fraction of won competitions (*1/3, because every strategy participated in 3 competitions)
wins_TL  <- 1/3 * ( sum(x[1:3]) )
wins_TA  <- 1/3 * ( 1-x[1]-y[1] + sum(x[4:5]) )
wins_TAE <- 1/3 * ( 1-x[2]-y[2] + 1-x[4]-y[4] + x[6] )
wins_S   <- 1/3 * ( 1-x[3]-y[3] + 1-x[5]-y[5] + 1-x[6]-y[6] )
draws_TL  <- 1/3 * ( y[1] + y[2] + y[3] )
draws_TA  <- 1/3 * ( y[1] + y[4] + y[5] )
draws_TAE <- 1/3 * ( y[2] + y[4] + y[6] )
draws_S   <- 1/3 * ( y[3] + y[5] + y[6] )
xses_win <- 1:4
plot(1,1,type="n",bty="l",ylim=c(0.038,1),
xlim=c(0.5,4.5),xlab="",ylab="",xaxt="n",xaxs="i",
cex.axis=axcex,yaxt="n")
#axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c("0","","0.5","","1"),cex.axis=axcex)
#segments(xses_win,rep(-1,4),xses_win,c(wins_TL,wins_TA,wins_TAE,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,rep(-1,4),xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),xses_win,c(wins_TA+draws_TA,wins_TAE+draws_TAE,wins_TL+draws_TL,wins_S+draws_S),lend=1,lwd=20,col="grey75")
text(1,-0.15,expression(paste(italic(T)[A])),srt=90,xpd=T,cex=2.5)
text(2,-0.15,expression(paste(italic(T)[AE])),srt=90,xpd=T,cex=2.5)
text(3,-0.15,expression(paste(italic(T)[L])),srt=90,xpd=T,cex=2.5)
text(4,-0.15,expression(paste(italic(S))),srt=90,xpd=T,cex=2.5)
### modified sigmoid
# I=0.2
data <- read.table("sig25_i02_Sm/data/output.txt",header=T)
x <- data$frac_s1
y <- data$frac_draw
# in the following we calculate the total fraction of won competitions (*1/3, because every strategy participated in 3 competitions)
wins_TL  <- 1/3 * ( sum(x[1:3]) )
wins_TA  <- 1/3 * ( 1-x[1]-y[1] + sum(x[4:5]) )
wins_TAE <- 1/3 * ( 1-x[2]-y[2] + 1-x[4]-y[4] + x[6] )
wins_S   <- 1/3 * ( 1-x[3]-y[3] + 1-x[5]-y[5] + 1-x[6]-y[6] )
draws_TL  <- 1/3 * ( y[1] + y[2] + y[3] )
draws_TA  <- 1/3 * ( y[1] + y[4] + y[5] )
draws_TAE <- 1/3 * ( y[2] + y[4] + y[6] )
draws_S   <- 1/3 * ( y[3] + y[5] + y[6] )
xses_win <- 1:4
plot(1,1,type="n",bty="l",ylim=c(0.038,1),
xlim=c(0.5,4.5),xlab="",ylab="",xaxt="n",xaxs="i",
cex.axis=axcex,yaxt="n")
axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c("0","","0.5","","1"),cex.axis=axcex)
#segments(xses_win,rep(-1,4),xses_win,c(wins_TL,wins_TA,wins_TAE,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,rep(-1,4),xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),xses_win,c(wins_TA+draws_TA,wins_TAE+draws_TAE,wins_TL+draws_TL,wins_S+draws_S),lend=1,lwd=20,col="grey75")
text(1,-0.15,expression(paste(italic(T)[A])),srt=90,xpd=T,cex=2.5)
text(2,-0.15,expression(paste(italic(T)[AE])),srt=90,xpd=T,cex=2.5)
text(3,-0.15,expression(paste(italic(T)[L])),srt=90,xpd=T,cex=2.5)
text(4,-0.15,expression(paste(italic(S)[m])),srt=90,xpd=T,cex=2.5)
# I=0.5
data <- read.table("sig25_i05_Sm/data/output.txt",header=T)
x <- data$frac_s1
y <- data$frac_draw
# in the following we calculate the total fraction of won competitions (*1/3, because every strategy participated in 3 competitions)
wins_TL  <- 1/3 * ( sum(x[1:3]) )
wins_TA  <- 1/3 * ( 1-x[1]-y[1] + sum(x[4:5]) )
wins_TAE <- 1/3 * ( 1-x[2]-y[2] + 1-x[4]-y[4] + x[6] )
wins_S   <- 1/3 * ( 1-x[3]-y[3] + 1-x[5]-y[5] + 1-x[6]-y[6] )
draws_TL  <- 1/3 * ( y[1] + y[2] + y[3] )
draws_TA  <- 1/3 * ( y[1] + y[4] + y[5] )
draws_TAE <- 1/3 * ( y[2] + y[4] + y[6] )
draws_S   <- 1/3 * ( y[3] + y[5] + y[6] )
xses_win <- 1:4
plot(1,1,type="n",bty="l",ylim=c(0.038,1),
xlim=c(0.5,4.5),xlab="",ylab="",xaxt="n",xaxs="i",
cex.axis=axcex,yaxt="n")
#axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c("0","","0.5","","1"),cex.axis=axcex)
#segments(xses_win,rep(-1,4),xses_win,c(wins_TL,wins_TA,wins_TAE,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,rep(-1,4),xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),xses_win,c(wins_TA+draws_TA,wins_TAE+draws_TAE,wins_TL+draws_TL,wins_S+draws_S),lend=1,lwd=20,col="grey75")
text(1,-0.15,expression(paste(italic(T)[A])),srt=90,xpd=T,cex=2.5)
text(2,-0.15,expression(paste(italic(T)[AE])),srt=90,xpd=T,cex=2.5)
text(3,-0.15,expression(paste(italic(T)[L])),srt=90,xpd=T,cex=2.5)
text(4,-0.15,expression(paste(italic(S)[m])),srt=90,xpd=T,cex=2.5)
# I=0.8
data <- read.table("sig25_i08_Sm/data/output.txt",header=T)
x <- data$frac_s1
y <- data$frac_draw
# in the following we calculate the total fraction of won competitions (*1/3, because every strategy participated in 3 competitions)
wins_TL  <- 1/3 * ( sum(x[1:3]) )
wins_TA  <- 1/3 * ( 1-x[1]-y[1] + sum(x[4:5]) )
wins_TAE <- 1/3 * ( 1-x[2]-y[2] + 1-x[4]-y[4] + x[6] )
wins_S   <- 1/3 * ( 1-x[3]-y[3] + 1-x[5]-y[5] + 1-x[6]-y[6] )
draws_TL  <- 1/3 * ( y[1] + y[2] + y[3] )
draws_TA  <- 1/3 * ( y[1] + y[4] + y[5] )
draws_TAE <- 1/3 * ( y[2] + y[4] + y[6] )
draws_S   <- 1/3 * ( y[3] + y[5] + y[6] )
xses_win <- 1:4
plot(1,1,type="n",bty="l",ylim=c(0.038,1),
xlim=c(0.5,4.5),xlab="",ylab="",xaxt="n",xaxs="i",
cex.axis=axcex,yaxt="n")
#axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c("0","","0.5","","1"),cex.axis=axcex)
#segments(xses_win,rep(-1,4),xses_win,c(wins_TL,wins_TA,wins_TAE,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,rep(-1,4),xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),lend=1,lwd=20,col="grey25")
segments(xses_win,c(wins_TA,wins_TAE,wins_TL,wins_S),xses_win,c(wins_TA+draws_TA,wins_TAE+draws_TAE,wins_TL+draws_TL,wins_S+draws_S),lend=1,lwd=20,col="grey75")
text(1,-0.15,expression(paste(italic(T)[A])),srt=90,xpd=T,cex=2.5)
text(2,-0.15,expression(paste(italic(T)[AE])),srt=90,xpd=T,cex=2.5)
text(3,-0.15,expression(paste(italic(T)[L])),srt=90,xpd=T,cex=2.5)
text(4,-0.15,expression(paste(italic(S)[m])),srt=90,xpd=T,cex=2.5)
mtext(at=0.5,side=1,line=2,outer=T,cex=2,"Decision rule")
mtext(side=4,outer=T,line=3,cex=1.75,at=0.8,"standard\n sigmoid")
mtext(side=4,outer=T,line=3,cex=1.75,at=0.3,"modified\n sigmoid")
mtext(at=0.55,side=2,line=3,outer=T,cex=2,"Fraction won/draw")
mtext(at=0.485,side=3,line=2,outer=T,expression(italic(I)==0.5),cex=2)
mtext(at=0.825,side=3,line=2,outer=T,expression(italic(I)==0.8),cex=2)
mtext(at=0.15,side=3,line=2,outer=T,expression(italic(I==0.2)),cex=2)
dev.copy2eps(file="figure_A1.eps",title="Poethke et al. | Figure A1")
setwd("~/Work/github/smart_disp/figures_A1_A2")
