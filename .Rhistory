plot(x,y)
x <- 1:10
y <- sin(x)
plot(x,y)
install.packages("revealjs", type = "source")
library(revealjs)
?repeat
c
x<-1:10
y<-x
y==x
y!=x
sum(y==x)
stimuli = 1:24
foil = 1:24
target = sample(stimuli,replace=F)
repeat{
match = sample(stimuli,replace=F)
if (sum(target==match)==0) {break;}
}
cbind(target,match)
?sample
stimuli = 1:34
foil_range = 1:27
no_trials = 24
target = sample(stimuli,no_trials,replace=F)
repeat{
match = sample(stimuli,no_trials,replace=F)
if (sum(target==match)==0) {break;}
}
foil = sample(foil_range,no_trials,replace=F)
res <- data.frame(target,match,foil)
res
stimuli = 1:34
foil_range = 1:27
no_trials = 24
target = sample(stimuli,no_trials,replace=F)
repeat{
match = sample(stimuli,no_trials,replace=F)
if (sum(target==match)==0) {break;}
}
foil = sample(foil_range,no_trials,replace=F)
res <- data.frame(target,match,foil)
res
write.table(res,file="randomized_pictures.txt",quote=F,row.names=F)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*R)
return(m_R)
}
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m)
libary(cowplot)
library(cowplot)
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m)
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality")
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m, size=2) +
xlab("amount of resources (R)") +
ylab("mortality")
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m, size=1.5) +
xlab("amount of resources (R)") +
ylab("mortality")
x11()
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m, size=1.5) +
xlab("amount of resources (R)") +
ylab("mortality")
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
growth = function(R, age) {
R1 = R + 0.25 * R * (1-R/100)
return(R1)
}
ggplot(data.frame(x=c(0, 100)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed")
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed")
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
growth = function(R) {
R1 = R + 0.25 * R * (1-R/100)
return(R1)
}
R = numeric(100)
mort = numeric(100)
R[1] = 10
mort[1] = m(R[i])
for (a in 2:100) {
R[a] = growth(R[a-1])
mort[a] = m(R[a])
}
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
growth = function(R) {
R1 = R + 0.25 * R * (1-R/100)
return(R1)
}
R = numeric(100)
mort = numeric(100)
R[1] = 10
mort[1] = m(R[1])
for (a in 2:100) {
R[a] = growth(R[a-1])
mort[a] = m(R[a])
}
plot(R)
plot(m)
plot(R)
plot(mort)
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed")
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R")
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=1.5)
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=15)
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=10)
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5)
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5,colour="grey75")
library(cowplot)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
x11()
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5,colour="grey75")
dev.copy2eps(file="mortality.eps")
library(cowplot)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
x11()
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5,colour="grey75") +
theme(text=element_text(size=15))
dev.copy2eps(file="mortality.eps")
library(cowplot)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
x11()
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5,colour="grey75") +
theme(text=element_text(size=20))
dev.copy2eps(file="mortality.eps")
library(cowplot)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
x11()
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5,colour="grey75") +
theme(text=element_text(size=30))
dev.copy2eps(file="mortality.eps")
library(cowplot)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
x11()
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5,colour="grey75") +
theme(text=element_text(size=20))
dev.copy2eps(file="mortality.eps")
library(cowplot)
m = function(x) {
m_R = 0.01 + 0.99 * exp(-0.2*x)
return(m_R)
}
x11()
ggplot(data.frame(x=c(0, 50)), aes(x)) + stat_function(fun=m) +
xlab("amount of resources (R)") +
ylab("mortality") +
geom_vline(xintercept=10,colour="grey75",linetype="dashed") +
annotate("text",x=15,y=0.85,label="initial R",size=7.5,colour="grey75") +
theme(text=element_text(size=15))
dev.copy2eps(file="mortality.eps")
install.package("xkcd")
install.packages("xkcd")
library(xkcd)
ggplot() + geom_point(aes(mpg, wt), data=mtcars)
ggplot() + geom_point(aes(mpg, wt), data=mtcars) +
theme_xkcd()
vignette("xkcd-intro")
library(extrafont)
if( 'xkcd' %in% fonts()) {
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) +
theme(text = element_text(size = 16, family = "xkcd"))
} else {
warning("Not xkcd fonts installed!")
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars)
}
p
download.file("http://simonsoftware.se/other/xkcd.ttf",
dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf ~/.fonts")
font_import(pattern = "[X/x]kcd", prompt=FALSE)
fonts()
fonttable()
if(.Platform$OS.type != "unix") {
## Register fonts for Windows bitmap output
loadfonts(device="win")
} else {
loadfonts()
}
ggplot() + geom_point(aes(mpg, wt), data=mtcars) +
theme_xkcd()
ggplot() + geom_line(aes(mpg, wt), data=mtcars) +
theme_xkcd()
ggplot() + geom_point(aes(mpg, wt), data=mtcars)
ggplot() + geom_line(aes(mpg, wt), data=mtcars)
ggplot() + geom_line(aes(mpg, wt), data=mtcars) +
theme_xkcd()
setwd("~/Work/github/smart_disp")
install.packages("vcd")
